{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\altha\\\\Desktop\\\\PyProjects\\\\Django React Notes\\\\frontend\\\\src\\\\pages\\\\NotePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotePage = _ref => {\n  _s();\n  let {\n    match,\n    history\n  } = _ref;\n  let noteId = match.params.id;\n  let [note, setNote] = useState(null);\n  useEffect(() => {\n    getNote();\n  }, [noteId]);\n  let getNote = async () => {\n    let response = await fetch(`/api/notes/${noteId}/`);\n    let data = await response.json();\n    setNote(data);\n  };\n  let updateNote = async () => {\n    fetch(`/api/notes/${noteId}/update`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    });\n  };\n  let handleSubmit = () => {\n    updateNote();\n    history.push('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n          onClick: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => {\n        setNote({\n          ...note,\n          'body': e.target.value\n        });\n      },\n      defaultValue: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(NotePage, \"n8xronsy9L/UDuS39alr0nWP3U0=\");\n_c = NotePage;\nexport default NotePage;\nvar _c;\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"names":["React","useEffect","useState","Link","ReactComponent","ArrowLeft","jsxDEV","_jsxDEV","NotePage","_ref","_s","match","history","noteId","params","id","note","setNote","getNote","response","fetch","data","json","updateNote","method","headers","body","JSON","stringify","handleSubmit","push","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","defaultValue","_c","$RefreshReg$"],"sources":["C:/Users/altha/Desktop/PyProjects/Django React Notes/frontend/src/pages/NotePage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg'\r\n\r\nconst NotePage = ({match , history}) => {\r\n  \r\n    let noteId = match.params.id\r\n\r\n    let [note , setNote] = useState(null)\r\n\r\n    useEffect (() => {\r\n        getNote()\r\n    }, [noteId])\r\n\r\n    let getNote = async () => {\r\n        let response = await fetch(`/api/notes/${noteId}/`)\r\n        let data = await response.json()\r\n        setNote(data)\r\n    }\r\n\r\n    let updateNote = async () => {\r\n        fetch(`/api/notes/${noteId}/update` , {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(note)\r\n\r\n        })\r\n    }\r\n\r\n    let handleSubmit = ()=> {\r\n        updateNote()\r\n        history.push('/')\r\n\r\n    }\r\n    return (\r\n    <div className='note'>\r\n        <div className='note-header'>\r\n            <h3>    \r\n                <ArrowLeft onClick={handleSubmit}/>\r\n            </h3>\r\n        </div>\r\n        <textarea onChange={(e) => {setNote({...note, 'body': e.target.value})}} defaultValue={note?.body}></textarea>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotePage"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,cAAc,IAAIC,SAAS,QAAQ,0BAA0B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtE,MAAMC,QAAQ,GAAGC,IAAA,IAAuB;EAAAC,EAAA;EAAA,IAAtB;IAACC,KAAK;IAAGC;EAAO,CAAC,GAAAH,IAAA;EAE/B,IAAII,MAAM,GAAGF,KAAK,CAACG,MAAM,CAACC,EAAE;EAE5B,IAAI,CAACC,IAAI,EAAGC,OAAO,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAErCD,SAAS,CAAE,MAAM;IACbiB,OAAO,EAAE;EACb,CAAC,EAAE,CAACL,MAAM,CAAC,CAAC;EAEZ,IAAIK,OAAO,GAAG,MAAAA,CAAA,KAAY;IACtB,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,cAAaP,MAAO,GAAE,CAAC;IACnD,IAAIQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAChCL,OAAO,CAACI,IAAI,CAAC;EACjB,CAAC;EAED,IAAIE,UAAU,GAAG,MAAAA,CAAA,KAAY;IACzBH,KAAK,CAAE,cAAaP,MAAO,SAAQ,EAAG;MAClCW,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,IAAI;IAE7B,CAAC,CAAC;EACN,CAAC;EAED,IAAIa,YAAY,GAAGA,CAAA,KAAK;IACpBN,UAAU,EAAE;IACZX,OAAO,CAACkB,IAAI,CAAC,GAAG,CAAC;EAErB,CAAC;EACD,oBACAvB,OAAA;IAAKwB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjBzB,OAAA;MAAKwB,SAAS,EAAC,aAAa;MAAAC,QAAA,eACxBzB,OAAA;QAAAyB,QAAA,eACIzB,OAAA,CAACF,SAAS;UAAC4B,OAAO,EAAEJ;QAAa;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAClC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACH,eACN9B,OAAA;MAAU+B,QAAQ,EAAGC,CAAC,IAAK;QAACtB,OAAO,CAAC;UAAC,GAAGD,IAAI;UAAE,MAAM,EAAEuB,CAAC,CAACC,MAAM,CAACC;QAAK,CAAC,CAAC;MAAA,CAAE;MAACC,YAAY,EAAE1B,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEU;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAY;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC5G;AAEV,CAAC;AAAA3B,EAAA,CA1CKF,QAAQ;AAAAmC,EAAA,GAARnC,QAAQ;AA4Cd,eAAeA,QAAQ;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}