[{"C:\\Users\\altha\\Desktop\\PyProjects\\Django React Notes\\mynotes\\frontend\\src\\index.js":"1","C:\\Users\\altha\\Desktop\\PyProjects\\Django React Notes\\mynotes\\frontend\\src\\App.js":"2","C:\\Users\\altha\\Desktop\\PyProjects\\Django React Notes\\mynotes\\frontend\\src\\components\\Header.js":"3","C:\\Users\\altha\\Desktop\\PyProjects\\Django React Notes\\mynotes\\frontend\\src\\pages\\NotesListPage.js":"4","C:\\Users\\altha\\Desktop\\PyProjects\\Django React Notes\\mynotes\\frontend\\src\\pages\\NotePage.js":"5","C:\\Users\\altha\\Desktop\\PyProjects\\Django React Notes\\mynotes\\frontend\\src\\components\\AddButton.js":"6","C:\\Users\\altha\\Desktop\\PyProjects\\Django React Notes\\mynotes\\frontend\\src\\components\\ListItem.js":"7"},{"size":233,"mtime":1678271552143,"results":"8","hashOfConfig":"9"},{"size":547,"mtime":1678427863568,"results":"10","hashOfConfig":"9"},{"size":167,"mtime":1678363580853,"results":"11","hashOfConfig":"9"},{"size":957,"mtime":1678371687610,"results":"12","hashOfConfig":"9"},{"size":2209,"mtime":1678393822904,"results":"13","hashOfConfig":"9"},{"size":294,"mtime":1678371722875,"results":"14","hashOfConfig":"9"},{"size":590,"mtime":1678425615737,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fhp2sc",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\altha\\Desktop\\PyProjects\\Django React Notes\\mynotes\\frontend\\src\\index.js",[],[],"C:\\Users\\altha\\Desktop\\PyProjects\\Django React Notes\\mynotes\\frontend\\src\\App.js",[],[],"C:\\Users\\altha\\Desktop\\PyProjects\\Django React Notes\\mynotes\\frontend\\src\\components\\Header.js",[],[],"C:\\Users\\altha\\Desktop\\PyProjects\\Django React Notes\\mynotes\\frontend\\src\\pages\\NotesListPage.js",[],[],"C:\\Users\\altha\\Desktop\\PyProjects\\Django React Notes\\mynotes\\frontend\\src\\pages\\NotePage.js",["38","39","40","41"],[],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg'\r\n\r\nconst NotePage = ({match , history}) => {\r\n  \r\n    let noteId = match.params.id\r\n\r\n    let [note , setNote] = useState(null)\r\n\r\n    useEffect (() => {\r\n        getNote()\r\n    }, [noteId])\r\n\r\n    let getNote = async () => {\r\n        if (noteId === 'new') return\r\n        let response = await fetch(`/api/notes/${noteId}/`)\r\n        let data = await response.json()\r\n        setNote(data)\r\n    }\r\n\r\n    let createNote = async () => {\r\n        fetch(`/api/notes/create/` , {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(note)\r\n\r\n        })\r\n    }\r\n\r\n    let updateNote = async () => {\r\n        fetch(`/api/notes/${noteId}/update` , {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(note)\r\n\r\n        })\r\n    }\r\n\r\n    let deleteNote = async () => {\r\n        fetch(`/api/notes/${noteId}/delete`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        history.push('/')\r\n    }\r\n\r\n    let handleSubmit = ()=> {\r\n        if (noteId !== 'new' && note.body == ''){\r\n            deleteNote()\r\n        } else if (noteId !== 'new') {\r\n            updateNote()\r\n        } else if (noteId == 'new' && note.body !== null) {\r\n            createNote()\r\n        }\r\n        history.push('/')\r\n    }\r\n\r\n    return (\r\n    <div className='note'>\r\n        <div className='note-header'>\r\n            <h3>    \r\n                <ArrowLeft onClick={handleSubmit}/>\r\n            </h3>\r\n            {noteId !== 'new' ? (\r\n                 <button onClick={deleteNote}> Delete </button>\r\n            ) : (\r\n                <button onClick={handleSubmit}> Done </button>\r\n            )}\r\n        </div>\r\n        <textarea onChange={(e) => {setNote({...note, 'body': e.target.value})}} defaultValue={note?.body}></textarea>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotePage","C:\\Users\\altha\\Desktop\\PyProjects\\Django React Notes\\mynotes\\frontend\\src\\components\\AddButton.js",[],[],"C:\\Users\\altha\\Desktop\\PyProjects\\Django React Notes\\mynotes\\frontend\\src\\components\\ListItem.js",[],[],{"ruleId":"42","severity":1,"message":"43","line":2,"column":10,"nodeType":"44","messageId":"45","endLine":2,"endColumn":14},{"ruleId":"46","severity":1,"message":"47","line":13,"column":8,"nodeType":"48","endLine":13,"endColumn":16,"suggestions":"49"},{"ruleId":"50","severity":1,"message":"51","line":55,"column":43,"nodeType":"52","messageId":"53","endLine":55,"endColumn":45},{"ruleId":"50","severity":1,"message":"51","line":59,"column":27,"nodeType":"52","messageId":"53","endLine":59,"endColumn":29},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getNote'. Either include it or remove the dependency array.","ArrayExpression",["54"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"55","fix":"56"},"Update the dependencies array to be: [getNote, noteId]",{"range":"57","text":"58"},[345,353],"[getNote, noteId]"]